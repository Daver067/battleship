(()=>{"use strict";var e={192:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,'.gridify{margin:auto;width:25vh;height:25vh;display:flex;flex-direction:column}.row{display:flex;width:100%;height:100%}.cell{width:100%;height:100%;border:1px solid #000}.cell:hover{background-color:bisque;cursor:pointer}div[shothere=true]{background-color:red}div[boat=null][shothere=true]::after{background-color:#fff;display:flex;justify-content:center;align-items:center;flex-direction:"row";content:"X";height:100%;width:100%}.moduleBackground{position:absolute;top:0;left:0;width:100vw;height:100vh;background-color:#fff}.moduleBackground h1{color:#000;align-self:center;font-size:5rem;text-align:center;padding:.25em 0}.carrier{display:flex;height:2.5vh;width:12.5vh;background-color:gray;margin:auto}.carrier.flip{height:12.5vh;width:2.5vh;flex-direction:column}.battleship{display:flex;height:2.5vh;width:10vh;background-color:gray;margin:auto}.battleship.flip{height:10vh;width:2.5vh;flex-direction:column}.cruiser{display:flex;height:2.5vh;width:7.5vh;background-color:gray;margin:auto}.cruiser.flip{height:7.5vh;width:2.5vh;flex-direction:column}.sub{display:flex;height:2.5vh;width:7.5vh;background-color:gray;margin:auto}.sub.flip{height:7.5vh;width:2.5vh;flex-direction:column}.patrolBoat{display:flex;height:2.5vh;width:5vh;background-color:gray;margin:auto}.patrolBoat.flip{height:5vh;width:2.5vw;flex-direction:column}.shipAndFlip{display:flex;flex-direction:column}.shipAndFlip h2{color:#000;align-self:center;font-size:3rem;text-align:center;padding:.5em 0 0 0}#rotate{height:5vw;padding:0 2em;align-self:center;font-size:1.25rem;margin:0 0 1em 0;border-radius:18px}div .human[boat=carrier]{background-color:#000}div .human[boat=carrier][shothere=true]{background-color:red}div .human[boat=battleship]{background-color:#000}div .human[boat=battleship][shothere=true]{background-color:red}div .human[boat=cruiser]{background-color:#000}div .human[boat=cruiser][shothere=true]{background-color:red}div .human[boat=sub]{background-color:#000}div .human[boat=sub][shothere=true]{background-color:red}div .human[boat=patrolBoat]{background-color:#000}div .human[boat=patrolBoat][shothere=true]{background-color:red}div .human[boat=null]{background-color:#fff}div .human[boat=null]:hover{background-color:#faebd7}*{box-sizing:border-box;margin:0;padding:0}h1{color:red}',"",{version:3,sources:["webpack://./src/scss/_grid.scss","webpack://./src/scss/_variableAndFunctions.scss","webpack://./src/scss/_placeShips.scss","webpack://./src/style.scss"],names:[],mappings:"AAEA,SACE,WAAA,CACA,UAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAA,CAEF,KACE,YAAA,CACA,UAAA,CACA,WAAA,CAGF,MACE,UAAA,CACA,WAAA,CACA,qBCXY,CDYZ,YACE,uBAAA,CACA,cAAA,CAKF,mBACE,oBAAA,CAIE,qCACE,qBAAA,CC/BN,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,oBD6B0B,CACpB,WAAA,CACA,WAAA,CACA,UAAA,CElCR,kBAEE,iBAAA,CACA,KAAA,CACA,MAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAA,CACA,qBACE,UAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CAIJ,SACE,YAAA,CACA,YAAA,CACA,YAAA,CACA,qBAAA,CACA,WAAA,CACA,cACE,aAAA,CACA,WAAA,CACA,qBAAA,CAGJ,YACE,YAAA,CACA,YAAA,CACA,UAAA,CACA,qBAAA,CACA,WAAA,CACA,iBACE,WAAA,CACA,WAAA,CACA,qBAAA,CAGJ,SACE,YAAA,CACA,YAAA,CACA,WAAA,CACA,qBAAA,CACA,WAAA,CACA,cACE,YAAA,CACA,WAAA,CACA,qBAAA,CAGJ,KACE,YAAA,CACA,YAAA,CACA,WAAA,CACA,qBAAA,CACA,WAAA,CACA,UACE,YAAA,CACA,WAAA,CACA,qBAAA,CAGJ,YACE,YAAA,CACA,YAAA,CACA,SAAA,CACA,qBAAA,CACA,WAAA,CACA,iBACE,UAAA,CACA,WAAA,CACA,qBAAA,CAIJ,aACE,YAAA,CACA,qBAAA,CACA,gBACE,UAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,kBAAA,CAIJ,QACE,UAAA,CACA,aAAA,CACA,iBAAA,CACA,iBAAA,CACA,gBAAA,CACA,kBAAA,CAKE,yBACE,qBAAA,CACA,wCACE,oBAAA,CAGJ,4BACE,qBAAA,CACA,2CACE,oBAAA,CAGJ,yBACE,qBAAA,CACA,wCACE,oBAAA,CAGJ,qBACE,qBAAA,CACA,oCACE,oBAAA,CAGJ,4BACE,qBAAA,CACA,2CACE,oBAAA,CAGJ,sBACE,qBAAA,CACA,4BACE,wBAAA,CCrIR,EACE,qBAAA,CACA,QAAA,CACA,SAAA,CAGF,GACE,SAAA",sourcesContent:['@import "../scss/variableAndFunctions";\n\n.gridify {\n  margin: auto;\n  width: 25vh;\n  height: 25vh;\n  display: flex;\n  flex-direction: column;\n}\n.row {\n  display: flex;\n  width: 100%;\n  height: 100%;\n}\n\n.cell {\n  width: 100%;\n  height: 100%;\n  border: $test-border;\n  &:hover {\n    background-color: bisque;\n    cursor: pointer;\n  }\n}\n\ndiv {\n  &[shothere="true"] {\n    background-color: red;\n  }\n  &[boat="null"] {\n    &[shothere="true"] {\n      &::after {\n        background-color: white;\n        @include flexCenter("row");\n        content: "X";\n        height: 100%;\n        width: 100%;\n      }\n    }\n  }\n}\n','@mixin flexCenter($direction) {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: $direction;\n}\n\n$test-border: 1px solid black;\n$boatColor: black;\n\n$font-weights: (\n  "light": 300,\n  "regular": 400,\n  "medium": 500,\n  "bold": 700,\n);\n\n@function weight($weight-name) {\n  @return map-get($map: $font-weights, $key: $weight-name);\n}\n','@import "../scss/variableAndFunctions";\n\n.moduleBackground {\n  // @include flexCenter(row);\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(255, 255, 255, 1);\n  h1 {\n    color: black;\n    align-self: center;\n    font-size: 5rem;\n    text-align: center;\n    padding: 0.25em 0;\n  }\n}\n\n.carrier {\n  display: flex;\n  height: 2.5vh;\n  width: 12.5vh;\n  background-color: grey;\n  margin: auto;\n  &.flip {\n    height: 12.5vh;\n    width: 2.5vh;\n    flex-direction: column;\n  }\n}\n.battleship {\n  display: flex;\n  height: 2.5vh;\n  width: 10vh;\n  background-color: grey;\n  margin: auto;\n  &.flip {\n    height: 10vh;\n    width: 2.5vh;\n    flex-direction: column;\n  }\n}\n.cruiser {\n  display: flex;\n  height: 2.5vh;\n  width: 7.5vh;\n  background-color: grey;\n  margin: auto;\n  &.flip {\n    height: 7.5vh;\n    width: 2.5vh;\n    flex-direction: column;\n  }\n}\n.sub {\n  display: flex;\n  height: 2.5vh;\n  width: 7.5vh;\n  background-color: grey;\n  margin: auto;\n  &.flip {\n    height: 7.5vh;\n    width: 2.5vh;\n    flex-direction: column;\n  }\n}\n.patrolBoat {\n  display: flex;\n  height: 2.5vh;\n  width: 5vh;\n  background-color: grey;\n  margin: auto;\n  &.flip {\n    height: 5vh;\n    width: 2.5vw;\n    flex-direction: column;\n  }\n}\n\n.shipAndFlip {\n  display: flex;\n  flex-direction: column;\n  h2 {\n    color: black;\n    align-self: center;\n    font-size: 3rem;\n    text-align: center;\n    padding: 0.5em 0 0 0;\n  }\n}\n\n#rotate {\n  height: 5vw;\n  padding: 0 2em;\n  align-self: center;\n  font-size: 1.25rem;\n  margin: 0 0 1em 0;\n  border-radius: 18px;\n}\n\ndiv {\n  & .human {\n    &[boat="carrier"] {\n      background-color: black;\n      &[shothere="true"] {\n        background-color: red;\n      }\n    }\n    &[boat="battleship"] {\n      background-color: black;\n      &[shothere="true"] {\n        background-color: red;\n      }\n    }\n    &[boat="cruiser"] {\n      background-color: black;\n      &[shothere="true"] {\n        background-color: red;\n      }\n    }\n    &[boat="sub"] {\n      background-color: black;\n      &[shothere="true"] {\n        background-color: red;\n      }\n    }\n    &[boat="patrolBoat"] {\n      background-color: black;\n      &[shothere="true"] {\n        background-color: red;\n      }\n    }\n    &[boat="null"] {\n      background-color: white;\n      &:hover {\n        background-color: antiquewhite;\n      }\n    }\n  }\n}\n','@import "./scss/grid.scss";\n@import "./scss/placeShips";\n\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\nh1 {\n  color: red;\n}\n'],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var A=e[c],s=r.base?A[0]+r.base:A[0],l=a[s]||0,d="".concat(s," ").concat(l);a[s]=l+1;var h=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==h)n[h].references++,n[h].updater(u);else{var p=o(u,r);r.byIndex=c,n.splice(c,0,{identifier:d,updater:p,references:1})}i.push(d)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var A=r(e,o),s=0;s<a.length;s++){var l=t(a[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=A}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{function e(e){const t=document.querySelector("body"),a=r("div","moduleBackground","   <h1>Place Your Ships!</h1><div id=\"playerBoard\"></div><div id='shipType'><h2 id='placeYourThisShip'></div></div>");t.appendChild(a),n(function(e){const n=r("div","human"," "),t=r("div","gridify"," ");return n.appendChild(t),e.gameboard.gameboard.forEach((e=>{const n=r("div","row"," ");e.forEach((e=>{const t=r("div","human"," ");t.classList.add("cell");for(const n in e)t.setAttribute("".concat(n),"".concat(e[n]));n.appendChild(t)})),t.appendChild(n)})),n}(m.players[0]),"#playerBoard"),n(r("div","shipAndFlip","<h2>Click on a square to place your ".concat(e.name,'</h2><button id="rotate">Rotate Ship</button>')),"#shipType");let i='<div class="cell"></div>';for(let n=1;n<e.length;n++)i+='<div class="cell"></div>';var c;n(r("div","".concat(e.name),"".concat(i)),"#shipType"),c=e,document.querySelector(".gridify").addEventListener("mousedown",(e=>{const n=e.target.attributes[3].value[0],t=e.target.attributes[3].value[2];let r;r=document.querySelector(".".concat(c.name)).classList.contains("flip")?"y":"x","error"===m.players[0].gameboard.placeShip(c.name,n,t,r)?console.log("you can't place a ship there!"):o()})),function(e){document.querySelector("button").addEventListener("click",(()=>{!function(e){document.querySelector(".".concat(e)).classList.toggle("flip")}(e)}))}(e.name)}function n(e,n){document.querySelector(n).appendChild(e)}function r(e,n,t){const r=document.createElement(e);return r.classList.add(n),r.innerHTML=t,r}function o(){0===m.players[0].gameboard.ships[0].locations.length?e(m.players[0].gameboard.ships[0]):0===m.players[0].gameboard.ships[1].locations.length?(a(),e(m.players[0].gameboard.ships[1])):0===m.players[0].gameboard.ships[2].locations.length?(a(),e(m.players[0].gameboard.ships[2])):0===m.players[0].gameboard.ships[3].locations.length?(a(),e(m.players[0].gameboard.ships[3])):0===m.players[0].gameboard.ships[4].locations.length?(a(),e(m.players[0].gameboard.ships[4])):(a(),m.startGame())}function a(){const e=document.querySelector("body"),n=document.querySelector(".moduleBackground");e.removeChild(n)}function i(){const e=document.querySelector(".container");for(;e.firstChild;)e.removeChild(e.firstElementChild)}function c(){i(),A(m.players[0],m.players[0].humanOrComp),A(m.players[1],m.players[1].humanOrComp)}function A(e,n){const t=document.querySelector(".container"),r=s("div","".concat(n)," "),o=s("div","gridify"," ");r.appendChild(o),e.gameboard.gameboard.forEach((e=>{const t=s("div","row"," ");e.forEach((e=>{const r=s("div","".concat(n)," ");r.classList.add("cell");for(const n in e)r.setAttribute("".concat(n),"".concat(e[n]));t.appendChild(r)})),o.appendChild(t)})),r.appendChild(s("h4","boardTitle","This is ".concat(e.name,"'s board"))),t.appendChild(r)}function s(e,n,t){const r=document.createElement(e);return r.classList.add(n),r.innerHTML=t,r}function l(e,n){return{name:e,length:n,locations:[],numHits:0,placeShip(e,n,t){e=Number(e),n=Number(n),this.locations.push({x_axis:n,y_axis:e,hit:!1,cell:"".concat(e,"-").concat(n)});const r=function(){for(let t=1;t<this.length;t++){let r={x_axis:n+1*t,y_axis:e,hit:!1,cell:"".concat(e,"-").concat(n+1*t)};this.locations.push(r)}}.bind(this),o=function(){for(let t=1;t<this.length;t++){let r={x_axis:n,y_axis:e+1*t,hit:!1,cell:"".concat(e+1*t,"-").concat(n)};this.locations.push(r)}}.bind(this);return"x"===t?r():o(),this.locations},hit(e,n){this.locations.forEach((t=>{Number(t.x_axis)===Number(n)&&Number(t.y_axis)===Number(e)&&(t.hit=!0,this.numHits++)}))},isSunk(){return this.numHits===this.length}}}function d(){const e=[];for(let n=0;n<7;n++){const t=[];for(let e=0;e<7;e++){const r={boat:null,shotHere:!1,cell:"".concat(n,"-").concat(e)};t.push(r)}e.push(t)}return e}function h(e){let n;switch(e){case"carrier":n=0;break;case"battleship":n=1;break;case"cruiser":n=2;break;case"sub":n=3;break;case"patrolBoat":n=4;break;default:console.log("invalid boat name")}return n}function u(e){return{owner:e,gameboard:d(),ships:[new l("carrier",5),new l("battleship",4),new l("cruiser",3),new l("sub",3),new l("patrolBoat",2)],placeShip(e,n,t,r){const o=h(e);if("error"===function(e,n,t,r,o){let a=0;const i=new l("theTestBoat",o);if(i.placeShip(n,t,r),e.forEach((e=>{e.forEach((e=>{i.locations.forEach((n=>{n.cell===e.cell&&null===e.boat&&a++}))}))})),a!==o)return"error"}(this.gameboard,n,t,r,this.ships[o].length))return"error";const a=this.ships[o];a.placeShip(n,t,r),this.gameboard=function(e,n){let t=e;return n.locations.forEach((e=>{t[e.y_axis][e.x_axis].boat="".concat(n.name)})),t}(this.gameboard,a)},receiveAttack(e,n){if(this.gameboard[e][n].shotHere=!0,null===this.gameboard[e][n].boat)return"miss";const t=h(this.gameboard[e][n].boat);return this.ships[t].hit(e,n),"".concat(this.gameboard[e][n].boat," was hit!")},allSunk(){let e=0;return this.ships.forEach((n=>{n.isSunk()&&e++})),5===e}}}function p(e,n){return{humanOrComp:n,name:e,isActivePlayer:!1,gameboard:new u(e),attack(e,n,t){e.gameboard.receiveAttack(n,t)},randomMove(e){const n=[];e.gameboard.gameboard.forEach((e=>{e.forEach((e=>{!1===e.shotHere&&n.push(e)}))}));const t=Math.floor(Math.random()*n.length),r=n[t],o=r.cell[0],a=r.cell[2];this.attack(e,o,a)}}}const C=(e,n)=>[new p(e,"human"),new p(n,"computer")],m={players:[],newGame(){this.players=[],function(){i();const e=document.querySelector(".container"),n=document.createElement("form");n.method="post",n.action="",n.id="player1";const t=document.createElement("div");t.classList.add("playerName"),t.innerHTML='<label for="player" placeholder="player" required>Player 1 Name:</label><input type="text" name="player" id="player" />',n.appendChild(t);const r=document.createElement("button");r.type="submit",r.innerHTML="Submit",n.appendChild(r),e.appendChild(n),(()=>{const e=document.getElementById("player1");e.addEventListener("submit",(n=>{n.preventDefault();const t=new FormData(e).get("player");m.setPlayers(t),i(),o()}))})()}()},startGame(){c(),this.takeTurn(this.players[0])},setPlayers(e){const n=C(e,"The Enemy");this.players=n,this.players[1].gameboard.placeShip("carrier",0,0,"x"),this.players[1].gameboard.placeShip("battleship",1,0,"x"),this.players[1].gameboard.placeShip("cruiser",2,0,"x"),this.players[1].gameboard.placeShip("sub",3,0,"x"),this.players[1].gameboard.placeShip("patrolBoat",4,0,"x")},takeTurn(e){this.checkForOtherPlayerWin(e),"human"===e.humanOrComp?document.querySelector(".computer").firstElementChild.addEventListener("mousedown",(e=>{const n=e.target.attributes[3].value[0],t=e.target.attributes[3].value[2];m.players[0].attack(m.players[1],n,t),c(),m.takeTurn(m.players[1])})):(e.randomMove(this.players[0]),c(),this.takeTurn(this.players[0]))},checkForOtherPlayerWin(e){!0===e.gameboard.allSunk()&&alert("".concat(e.name," lost the game"))}};var g=t(379),b=t.n(g),f=t(795),v=t.n(f),y=t(569),k=t.n(y),x=t(565),w=t.n(x),B=t(216),E=t.n(B),S=t(589),q=t.n(S),T=t(192),Y={};Y.styleTagTransform=q(),Y.setAttributes=w(),Y.insert=k().bind(null,"head"),Y.domAPI=v(),Y.insertStyleElement=E(),b()(T.Z,Y),T.Z&&T.Z.locals&&T.Z.locals,m.newGame()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,